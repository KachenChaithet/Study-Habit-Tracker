{
  "version": 3,
  "sources": ["../../react-hot-toast/src/core/types.ts", "../../react-hot-toast/src/core/utils.ts", "../../react-hot-toast/src/core/store.ts", "../../react-hot-toast/src/core/toast.ts", "../../react-hot-toast/src/core/use-toaster.ts", "../../react-hot-toast/src/headless/index.ts"],
  "sourcesContent": ["import { CSSProperties } from 'react';\n\nexport type ToastType = 'success' | 'error' | 'loading' | 'blank' | 'custom';\nexport type ToastPosition =\n  | 'top-left'\n  | 'top-center'\n  | 'top-right'\n  | 'bottom-left'\n  | 'bottom-center'\n  | 'bottom-right';\n\nexport type Renderable = React.ReactElement | string | null;\n\nexport interface IconTheme {\n  primary: string;\n  secondary: string;\n}\n\nexport type ValueFunction<TValue, TArg> = (arg: TArg) => TValue;\nexport type ValueOrFunction<TValue, TArg> =\n  | TValue\n  | ValueFunction<TValue, TArg>;\n\nconst isFunction = <TValue, TArg>(\n  valOrFunction: ValueOrFunction<TValue, TArg>\n): valOrFunction is ValueFunction<TValue, TArg> =>\n  typeof valOrFunction === 'function';\n\nexport const resolveValue = <TValue, TArg>(\n  valOrFunction: ValueOrFunction<TValue, TArg>,\n  arg: TArg\n): TValue => (isFunction(valOrFunction) ? valOrFunction(arg) : valOrFunction);\n\nexport interface Toast {\n  type: ToastType;\n  id: string;\n  toasterId?: string;\n  message: ValueOrFunction<Renderable, Toast>;\n  icon?: Renderable;\n  duration?: number;\n  pauseDuration: number;\n  position?: ToastPosition;\n  removeDelay?: number;\n\n  ariaProps: {\n    role: 'status' | 'alert';\n    'aria-live': 'assertive' | 'off' | 'polite';\n  };\n\n  style?: CSSProperties;\n  className?: string;\n  iconTheme?: IconTheme;\n\n  createdAt: number;\n  visible: boolean;\n  dismissed: boolean;\n  height?: number;\n}\n\nexport type ToastOptions = Partial<\n  Pick<\n    Toast,\n    | 'id'\n    | 'icon'\n    | 'duration'\n    | 'ariaProps'\n    | 'className'\n    | 'style'\n    | 'position'\n    | 'iconTheme'\n    | 'toasterId'\n    | 'removeDelay'\n  >\n>;\n\nexport type DefaultToastOptions = ToastOptions & {\n  [key in ToastType]?: ToastOptions;\n};\n\nexport interface ToasterProps {\n  position?: ToastPosition;\n  toastOptions?: DefaultToastOptions;\n  reverseOrder?: boolean;\n  gutter?: number;\n  containerStyle?: React.CSSProperties;\n  containerClassName?: string;\n  toasterId?: string;\n  children?: (toast: Toast) => React.ReactElement;\n}\n\nexport interface ToastWrapperProps {\n  id: string;\n  className?: string;\n  style?: React.CSSProperties;\n  onHeightUpdate: (id: string, height: number) => void;\n  children?: React.ReactNode;\n}\n", "export const genId = (() => {\n  let count = 0;\n  return () => {\n    return (++count).toString();\n  };\n})();\n\nexport const prefersReducedMotion = (() => {\n  // Cache result\n  let shouldReduceMotion: boolean | undefined = undefined;\n\n  return () => {\n    if (shouldReduceMotion === undefined && typeof window !== 'undefined') {\n      const mediaQuery = matchMedia('(prefers-reduced-motion: reduce)');\n      shouldReduceMotion = !mediaQuery || mediaQuery.matches;\n    }\n    return shouldReduceMotion;\n  };\n})();\n", "import { useEffect, useState, useRef } from 'react';\nimport { DefaultToastOptions, Toast, ToastType } from './types';\n\nexport const TOAST_EXPIRE_DISMISS_DELAY = 1000;\nexport const TOAST_LIMIT = 20;\nexport const DEFAULT_TOASTER_ID = 'default';\n\ninterface ToasterSettings {\n  toastLimit: number;\n}\n\nexport enum ActionType {\n  ADD_TOAST,\n  UPDATE_TOAST,\n  UPSERT_TOAST,\n  DISMISS_TOAST,\n  REMOVE_TOAST,\n  START_PAUSE,\n  END_PAUSE,\n}\n\nexport type Action =\n  | {\n      type: ActionType.ADD_TOAST;\n      toast: Toast;\n    }\n  | {\n      type: ActionType.UPSERT_TOAST;\n      toast: Toast;\n    }\n  | {\n      type: ActionType.UPDATE_TOAST;\n      toast: Partial<Toast>;\n    }\n  | {\n      type: ActionType.DISMISS_TOAST;\n      toastId?: string;\n    }\n  | {\n      type: ActionType.REMOVE_TOAST;\n      toastId?: string;\n    }\n  | {\n      type: ActionType.START_PAUSE;\n      time: number;\n    }\n  | {\n      type: ActionType.END_PAUSE;\n      time: number;\n    };\n\ninterface ToasterState {\n  toasts: Toast[];\n  settings: ToasterSettings;\n  pausedAt: number | undefined;\n}\n\ninterface State {\n  [toasterId: string]: ToasterState;\n}\n\nexport const reducer = (state: ToasterState, action: Action): ToasterState => {\n  const { toastLimit } = state.settings;\n\n  switch (action.type) {\n    case ActionType.ADD_TOAST:\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, toastLimit),\n      };\n\n    case ActionType.UPDATE_TOAST:\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      };\n\n    case ActionType.UPSERT_TOAST:\n      const { toast } = action;\n      return reducer(state, {\n        type: state.toasts.find((t) => t.id === toast.id)\n          ? ActionType.UPDATE_TOAST\n          : ActionType.ADD_TOAST,\n        toast,\n      });\n\n    case ActionType.DISMISS_TOAST:\n      const { toastId } = action;\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                dismissed: true,\n                visible: false,\n              }\n            : t\n        ),\n      };\n    case ActionType.REMOVE_TOAST:\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      };\n\n    case ActionType.START_PAUSE:\n      return {\n        ...state,\n        pausedAt: action.time,\n      };\n\n    case ActionType.END_PAUSE:\n      const diff = action.time - (state.pausedAt || 0);\n\n      return {\n        ...state,\n        pausedAt: undefined,\n        toasts: state.toasts.map((t) => ({\n          ...t,\n          pauseDuration: t.pauseDuration + diff,\n        })),\n      };\n  }\n};\n\nconst listeners: Array<\n  [toasterId: string, reducer: (state: ToasterState) => void]\n> = [];\n\nconst defaultToasterState: ToasterState = {\n  toasts: [],\n  pausedAt: undefined,\n  settings: {\n    toastLimit: TOAST_LIMIT,\n  },\n};\nlet memoryState: State = {};\n\nexport const dispatch = (action: Action, toasterId = DEFAULT_TOASTER_ID) => {\n  memoryState[toasterId] = reducer(\n    memoryState[toasterId] || defaultToasterState,\n    action\n  );\n  listeners.forEach(([id, listener]) => {\n    if (id === toasterId) {\n      listener(memoryState[toasterId]);\n    }\n  });\n};\n\nexport const dispatchAll = (action: Action) =>\n  Object.keys(memoryState).forEach((toasterId) => dispatch(action, toasterId));\n\nexport const getToasterIdFromToastId = (toastId: string) =>\n  Object.keys(memoryState).find((toasterId) =>\n    memoryState[toasterId].toasts.some((t) => t.id === toastId)\n  );\n\nexport const createDispatch =\n  (toasterId = DEFAULT_TOASTER_ID) =>\n  (action: Action) => {\n    dispatch(action, toasterId);\n  };\n\nexport const defaultTimeouts: {\n  [key in ToastType]: number;\n} = {\n  blank: 4000,\n  error: 4000,\n  success: 2000,\n  loading: Infinity,\n  custom: 4000,\n};\n\nexport const useStore = (\n  toastOptions: DefaultToastOptions = {},\n  toasterId: string = DEFAULT_TOASTER_ID\n): ToasterState => {\n  const [state, setState] = useState<ToasterState>(\n    memoryState[toasterId] || defaultToasterState\n  );\n  const initial = useRef(memoryState[toasterId]);\n\n  // TODO: Switch to useSyncExternalStore when targeting React 18+\n  useEffect(() => {\n    if (initial.current !== memoryState[toasterId]) {\n      setState(memoryState[toasterId]);\n    }\n    listeners.push([toasterId, setState]);\n    return () => {\n      const index = listeners.findIndex(([id]) => id === toasterId);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [toasterId]);\n\n  const mergedToasts = state.toasts.map((t) => ({\n    ...toastOptions,\n    ...toastOptions[t.type],\n    ...t,\n    removeDelay:\n      t.removeDelay ||\n      toastOptions[t.type]?.removeDelay ||\n      toastOptions?.removeDelay,\n    duration:\n      t.duration ||\n      toastOptions[t.type]?.duration ||\n      toastOptions?.duration ||\n      defaultTimeouts[t.type],\n    style: {\n      ...toastOptions.style,\n      ...toastOptions[t.type]?.style,\n      ...t.style,\n    },\n  }));\n\n  return {\n    ...state,\n    toasts: mergedToasts,\n  };\n};\n", "import {\n  Renderable,\n  Toast,\n  ToastOptions,\n  ToastType,\n  DefaultToastOptions,\n  ValueOrFunction,\n  resolveValue,\n} from './types';\nimport { genId } from './utils';\nimport {\n  createDispatch,\n  Action,\n  ActionType,\n  dispatchAll,\n  getToasterIdFromToastId,\n} from './store';\n\ntype Message = ValueOrFunction<Renderable, Toast>;\n\ntype ToastHandler = (message: Message, options?: ToastOptions) => string;\n\nconst createToast = (\n  message: Message,\n  type: ToastType = 'blank',\n  opts?: ToastOptions\n): Toast => ({\n  createdAt: Date.now(),\n  visible: true,\n  dismissed: false,\n  type,\n  ariaProps: {\n    role: 'status',\n    'aria-live': 'polite',\n  },\n  message,\n  pauseDuration: 0,\n  ...opts,\n  id: opts?.id || genId(),\n});\n\nconst createHandler =\n  (type?: ToastType): ToastHandler =>\n  (message, options) => {\n    const toast = createToast(message, type, options);\n\n    const dispatch = createDispatch(\n      toast.toasterId || getToasterIdFromToastId(toast.id)\n    );\n\n    dispatch({ type: ActionType.UPSERT_TOAST, toast });\n    return toast.id;\n  };\n\nconst toast = (message: Message, opts?: ToastOptions) =>\n  createHandler('blank')(message, opts);\n\ntoast.error = createHandler('error');\ntoast.success = createHandler('success');\ntoast.loading = createHandler('loading');\ntoast.custom = createHandler('custom');\n\n/**\n * Dismisses the toast with the given id. If no id is given, dismisses all toasts.\n * The toast will transition out and then be removed from the DOM.\n * Applies to all toasters, except when a `toasterId` is given.\n */\ntoast.dismiss = (toastId?: string, toasterId?: string) => {\n  const action: Action = {\n    type: ActionType.DISMISS_TOAST,\n    toastId,\n  };\n\n  if (toasterId) {\n    createDispatch(toasterId)(action);\n  } else {\n    dispatchAll(action);\n  }\n};\n\n/**\n * Dismisses all toasts.\n */\ntoast.dismissAll = (toasterId?: string) => toast.dismiss(undefined, toasterId);\n\n/**\n * Removes the toast with the given id.\n * The toast will be removed from the DOM without any transition.\n */\ntoast.remove = (toastId?: string, toasterId?: string) => {\n  const action: Action = {\n    type: ActionType.REMOVE_TOAST,\n    toastId,\n  };\n  if (toasterId) {\n    createDispatch(toasterId)(action);\n  } else {\n    dispatchAll(action);\n  }\n};\n\n/**\n * Removes all toasts.\n */\ntoast.removeAll = (toasterId?: string) => toast.remove(undefined, toasterId);\n\n/**\n * Create a loading toast that will automatically updates with the promise.\n */\ntoast.promise = <T>(\n  promise: Promise<T> | (() => Promise<T>),\n  msgs: {\n    loading: Renderable;\n    success?: ValueOrFunction<Renderable, T>;\n    error?: ValueOrFunction<Renderable, any>;\n  },\n  opts?: DefaultToastOptions\n) => {\n  const id = toast.loading(msgs.loading, { ...opts, ...opts?.loading });\n\n  if (typeof promise === 'function') {\n    promise = promise();\n  }\n\n  promise\n    .then((p) => {\n      const successMessage = msgs.success\n        ? resolveValue(msgs.success, p)\n        : undefined;\n\n      if (successMessage) {\n        toast.success(successMessage, {\n          id,\n          ...opts,\n          ...opts?.success,\n        });\n      } else {\n        toast.dismiss(id);\n      }\n      return p;\n    })\n    .catch((e) => {\n      const errorMessage = msgs.error ? resolveValue(msgs.error, e) : undefined;\n\n      if (errorMessage) {\n        toast.error(errorMessage, {\n          id,\n          ...opts,\n          ...opts?.error,\n        });\n      } else {\n        toast.dismiss(id);\n      }\n    });\n\n  return promise;\n};\n\nexport { toast };\n", "import { useEffect, useCallback, useRef } from 'react';\nimport { createDispatch, ActionType, useStore, dispatch } from './store';\nimport { toast } from './toast';\nimport { DefaultToastOptions, Toast, ToastPosition } from './types';\n\nexport const REMOVE_DELAY = 1000;\n\nexport const useToaster = (\n  toastOptions?: DefaultToastOptions,\n  toasterId: string = 'default'\n) => {\n  const { toasts, pausedAt } = useStore(toastOptions, toasterId);\n  const toastTimeouts = useRef(\n    new Map<Toast['id'], ReturnType<typeof setTimeout>>()\n  ).current;\n\n  const addToRemoveQueue = useCallback(\n    (toastId: string, removeDelay = REMOVE_DELAY) => {\n      if (toastTimeouts.has(toastId)) {\n        return;\n      }\n\n      const timeout = setTimeout(() => {\n        toastTimeouts.delete(toastId);\n        dispatch({\n          type: ActionType.REMOVE_TOAST,\n          toastId: toastId,\n        });\n      }, removeDelay);\n\n      toastTimeouts.set(toastId, timeout);\n    },\n    []\n  );\n\n  useEffect(() => {\n    if (pausedAt) {\n      return;\n    }\n\n    const now = Date.now();\n    const timeouts = toasts.map((t) => {\n      if (t.duration === Infinity) {\n        return;\n      }\n\n      const durationLeft =\n        (t.duration || 0) + t.pauseDuration - (now - t.createdAt);\n\n      if (durationLeft < 0) {\n        if (t.visible) {\n          toast.dismiss(t.id);\n        }\n        return;\n      }\n      return setTimeout(() => toast.dismiss(t.id, toasterId), durationLeft);\n    });\n\n    return () => {\n      timeouts.forEach((timeout) => timeout && clearTimeout(timeout));\n    };\n  }, [toasts, pausedAt, toasterId]);\n\n  const dispatch = useCallback(createDispatch(toasterId), [toasterId]);\n\n  const startPause = useCallback(() => {\n    dispatch({\n      type: ActionType.START_PAUSE,\n      time: Date.now(),\n    });\n  }, [dispatch]);\n\n  const updateHeight = useCallback(\n    (toastId: string, height: number) => {\n      dispatch({\n        type: ActionType.UPDATE_TOAST,\n        toast: { id: toastId, height },\n      });\n    },\n    [dispatch]\n  );\n\n  const endPause = useCallback(() => {\n    if (pausedAt) {\n      dispatch({ type: ActionType.END_PAUSE, time: Date.now() });\n    }\n  }, [pausedAt, dispatch]);\n\n  const calculateOffset = useCallback(\n    (\n      toast: Toast,\n      opts?: {\n        reverseOrder?: boolean;\n        gutter?: number;\n        defaultPosition?: ToastPosition;\n      }\n    ) => {\n      const { reverseOrder = false, gutter = 8, defaultPosition } = opts || {};\n\n      const relevantToasts = toasts.filter(\n        (t) =>\n          (t.position || defaultPosition) ===\n            (toast.position || defaultPosition) && t.height\n      );\n      const toastIndex = relevantToasts.findIndex((t) => t.id === toast.id);\n      const toastsBefore = relevantToasts.filter(\n        (toast, i) => i < toastIndex && toast.visible\n      ).length;\n\n      const offset = relevantToasts\n        .filter((t) => t.visible)\n        .slice(...(reverseOrder ? [toastsBefore + 1] : [0, toastsBefore]))\n        .reduce((acc, t) => acc + (t.height || 0) + gutter, 0);\n\n      return offset;\n    },\n    [toasts]\n  );\n\n  // Keep track of dismissed toasts and remove them after the delay\n  useEffect(() => {\n    toasts.forEach((toast) => {\n      if (toast.dismissed) {\n        addToRemoveQueue(toast.id, toast.removeDelay);\n      } else {\n        // If toast becomes visible again, remove it from the queue\n        const timeout = toastTimeouts.get(toast.id);\n        if (timeout) {\n          clearTimeout(timeout);\n          toastTimeouts.delete(toast.id);\n        }\n      }\n    });\n  }, [toasts, addToRemoveQueue]);\n\n  return {\n    toasts,\n    handlers: {\n      updateHeight,\n      startPause,\n      endPause,\n      calculateOffset,\n    },\n  };\n};\n", "import { toast } from '../core/toast';\n\nexport type {\n  DefaultToastOptions,\n  IconTheme,\n  Renderable,\n  Toast,\n  ToasterProps,\n  ToastOptions,\n  ToastPosition,\n  ToastType,\n  ValueFunction,\n  ValueOrFunction,\n} from '../core/types';\n\nexport { resolveValue } from '../core/types';\nexport { useToaster } from '../core/use-toaster';\nexport { useStore as useToasterStore } from '../core/store';\n\nexport { toast };\nexport default toast;\n"],
  "mappings": "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",
  "names": ["import_react", "isFunction", "valOrFunction", "resolveValue", "arg", "genId", "count", "TOAST_LIMIT", "DEFAULT_TOASTER_ID", "reducer", "state", "action", "toastLimit", "t", "toast", "toastId", "diff", "listeners", "defaultToasterState", "memoryState", "dispatch", "toasterId", "id", "listener", "dispatchAll", "getToasterIdFromToastId", "createDispatch", "defaultTimeouts", "useStore", "toastOptions", "setState", "useState", "initial", "useRef", "useEffect", "index", "mergedToasts", "_a", "_b", "_c", "createToast", "message", "type", "opts", "genId", "createHandler", "options", "promise", "msgs", "p", "successMessage", "resolveValue", "e", "errorMessage", "REMOVE_DELAY", "useToaster", "toasts", "pausedAt", "toastTimeouts", "addToRemoveQueue", "useCallback", "removeDelay", "timeout", "now", "timeouts", "durationLeft", "startPause", "updateHeight", "height", "endPause", "calculateOffset", "reverseOrder", "gutter", "defaultPosition", "relevantToasts", "toastIndex", "toastsBefore", "i", "acc", "headless_default"]
}
